apply plugin: 'com.android.application'
apply plugin: 'maven'
apply from: rootProject.getRootDir().getAbsolutePath() + '/myUtil.gradle'
apply plugin: 'com.getkeepsafe.dexcount'
getAndroidVersion()
println utilName


ext {
    compileSdkVersion = 25
    minSdkVersion = 19
    targetSdkVersion = 25
}


afterEvaluate {
    println '******************* this is the msg from afterEvaluate'
}
android {
    signingConfigs {
        config {
            keyPassword '2332apple'
            storeFile file('D:/key/lnKey.jks')
            storePassword '2332apple'
        }
    }
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.example.administrator.mytestallhere"

        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

    }
    signingConfigs {
        release {
            storeFile file("../key/lnKey.jks")
            keyAlias "key0"
            keyPassword "2332apple"
            storePassword "2332apple"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "MyBuild", "\"release buildConfigFields\"")
            resValue "string", "buildTime", "0"
            resValue "string", "app_name", "TestAllRelease"
            signingConfig signingConfigs.release

        }
        debug {
            minifyEnabled false

            //applicationIdSuffix '.ddddbug'    为了方便，注了注了
            buildConfigField "String", "MyBuild", "\"debug buildConfigFields\""
            resValue "string", "buildTime", "1"
            resValue "string", "app_name", "TestAlldebug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        myBuildType {
            initWith(debug)
            applicationIdSuffix '.myBuildType'
            buildConfigField("String", "MyBuild", "\"myBuildType buildConfigFields\"")
            resValue "string", "app_name", "TestAllmyBuildType"
            resValue "string", "buildTime", "2"
        }

    }

    // flavorDimensions 'first','seconed'
    // config  variant features
    productFlavors {
        myray {
            //dimension 'seconed'
            //applicationId 'mybase.com.example.administrator.mytestallhere'    为了方便，注了注了
            applicationId "com.example.administrator.mytestallhere"
            manifestPlaceholders = [CHANNEL: "myray", APPLICATIONID: applicationId]


        }
        treasure {
            // dimension 'first'
            applicationId 'treasure.com.example.administrator.mytestallhere'
            manifestPlaceholders = [CHANNEL: 'treasure', APPLICATIONID: applicationId]
        }
    }
    //according to the density or abi to cer
    splits {
        density {
            enable false
        }
        abi {

        }
    }
    variantFilter {

    }
    sourceSets {
        //maybe only the 'main' script block is workful
//        myrayDebug{
//            java.srcDirs=['main/java','mybase/java']
//        }
        myray {
            java.srcDirs = ['src/main/java', 'src/mybase/java']
            assets.srcDirs = ['assets']
//!!!!! not like follows : main/java....mybase/java.....
        }
        treasure {
            assets.srcDirs = ['assets']
            java.srcDirs = ['src/main/java', 'src/treasure/java']
//!!!!! not like follows : main/java....mybase/java.....
        }
    }
    //Use the following properties to improve the build times when Gradle compiles your code into DEX files.
    dexOptions {
        // Sets the maximum number of DEX processes
        // that can be started concurrently.
        maxProcessCount 8
        // Sets the maximum memory allocation pool size
        // for the dex operation.
        javaMaxHeapSize "2g"
        // Enables Gradle to pre-dex library dependencies.
        preDexLibraries true
    }
    //set png cruncherEnable ,disable it can reduce the gradle build time
    aaptOptions {
        cruncherEnabled false
    }
}


configurations {
    // Initializes a placeholder for the freeDebugApk dependency configuration.
    //productFlavor+buildType+dependMode
    myrayDebugCompile {}
}


repositories {
    //本地仓库
    flatDir {
        dirs 'libs', '../mylibrary/libs'// aar目录
    }
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile(name: 'ultra_lib-1.0.11', ext: 'aar')
    //arr依赖不传递
    //arr依赖不传递
    compile(name: 'calendar-release-1.0', ext: 'aar')
    //引用本地aar
    //    compile 'org.greenrobot:eventbus:3.0.0'
    //    compile 'com.github.bumptech.glide:glide:4.0.0-RC1'
    //    compile 'com.android.support:appcompat-v7:25.3.1'
    //    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    //    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    //    compile 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.0.0'
    //    compile 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0'
    //    compile 'com.jakewharton.rxbinding2:rxbinding-design:2.0.0'
    //    compile 'com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:2.0.0'
    //    compile 'com.jakewharton.rxbinding2:rxbinding-leanback-v17:2.0.0'
    //    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    //    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0-RC1'
    //butterknife 在子工程里依赖比较麻烦
    //myrayCompile 'com.jakewharton:butterknife:8.8.0'      //注意这里是只有选择myray的productFlavor才会用这个依赖
    //treasureCompile project(':mylibrary')                   //这里也是
    compile project(':mylibrary')
    //内存泄露
    //这种写法必须在configurations下面定义！！
    //debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.2'
    //releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.2'
    compile 'com.jakewharton:butterknife:8.8.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.0'
    myrayDebugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.2'
}


class MyClass {
    String myname

    void setName(s) {
        myname = s
    }

    void setClosure(Closure closure) {
        closure(myname)
    }

    void setname(s) {
        myname = s
    }


}

task testMyClass {
    def mClass = new MyClass()
    doLast {
        mClass.myName 'hh'
        println mClass.myname
    }
}
uploadArchives {
    repositories {
        mavenDeployer {
            repository url: "file://localhost/tmp/myRepo/"
        }
    }
}

sourceSets.all {
    ext.purpose = null
    println 'sourceSets :    ' + it.name
}

sourceSets {
    main {
        purpose = 'main'
    }
    test {
        purpose = 'test'
    }
    belove {
        purpose = 'belove'
    }
}

task testSourceSets << {
    sourceSets.matching { it.purpose == 'belove' }.each { println '--' + it.name }
    configure()
}
